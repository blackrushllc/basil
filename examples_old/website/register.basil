#CGI_NO_HEADER
<?basil

    let SITE_TITLE$ = ""

    func send_header_ok_html() begin
        print "";
        print "";
        print "";
        return 0;
    end

    func set_cookie(name$, value$) begin
        print "" + name$ + "" + value$ + "";
        return 0;
    end

    func send_header_redirect(loc$) begin
        print "";
        print "" + loc$ + "";
        return 0;
    end

    func layout_start(title$) begin
        print ""en\""utf-8\"" + HTML$(title$) + "";
        print ""viewport\""width=device-width, initial-scale=1\"";
        print ""stylesheet\""css/site.css\""top\""wrap\"" + HTML$(SITE_TITLE$) + ""wrap\"";
        return 0;
    end

    func layout_end() begin
        print ""foot\""wrap\""index.basil\""js/site.js\"";
        return 0;
    end

    func param$(name$) begin
        // Only look at POST parameters for registration
        for each kv$ in POST$()
        begin
            let eq% = INSTR(kv$, "");
            if eq% > 0 then begin
                let k$ = LEFT$(kv$, eq%);
                let v$ = MID$(kv$, eq%+2);
                if k$ == name$ then return v$;
            end
        end
        next
        return "";
    end

    func db_open%() begin
        // Try DB in script directory first
        let db% = SQLITE_OPEN%("");
        if db% == 0 then begin
            // Fallback to a writable temp dir
            let tmp$ = ENV$("");
            if LEN(tmp$) == 0 then let tmp$ = ENV$("");
            if LEN(tmp$) == 0 then let tmp$ = ENV$("");
            if LEN(tmp$) == 0 then let tmp$ = "";
            // Join path safely
            let sep$ = "";
            if RIGHT$(tmp$, 1) == "" or RIGHT$(tmp$, 1) == "" then
            begin
                let path$ = tmp$ + "";

            else

                let path$ = tmp$ + "" + "";
            end
            let db% = SQLITE_OPEN%(path$);
        end
        if db% == 0 then return 0;
        let _ = SQLITE_EXEC%(db%, "");
        return db%;
    end

    // Naive SQL escaping: double single quotes
    func esc_sql$(s$) begin
rem        LET out$ = "";
rem        FOR i% = 1 TO LEN(s$)
rem            LET ch$ = MID$(s$, i%, 1);
rem            IF ch$ == "" then begin
rem                LET out$ = out$ + "";
rem            ELSE
rem                LET out$ = out$ + ch$;
rem            END
rem        NEXT i%
rem        RETURN out$;
        return s$;
    end

    func create_user%(db%, username$, password$) begin
        let u2$ = esc_sql$(username$);
        let p2$ = esc_sql$(password$);
        let aff% = SQLITE_EXEC%(db%, "" + u2$ + "" + p2$ + "");
        let id% = SQLITE_LAST_INSERT_ID%(db%);
        return id%;
    end

    func user_exists%(db%, username$) begin
        dim rows$(0,0)
        let u2$ = esc_sql$(username$);
        let rows$() = SQLITE_QUERY2D$(db%, "" + u2$ + "")
        return ARRAY_ROWS%(rows$) > 0
    end

    let method$ = ENV$("");

    if method$ == "" then begin
        let u$ = param$("");
        let p$ = param$("");
        let p2$ = param$("");

        let db% = db_open%();
        if db% == 0 then begin
            print "";
            exit 0;
        end

        ' Validation without ELSE: set err$ on first failure
        if LEN(u$) == 0 or LEN(p$) == 0 then begin
            let err$ = "";
        end

        if LEN(err$) == 0 then begin
            if p$ <> p2$ then begin
                let err$ = "";
            end
        end

        if LEN(err$) == 0 then begin
            if user_exists%(db%, u$) then begin
                let err$ = "";
            end
        end

        if LEN(err$) == 0 then begin
            let new_id% = create_user%(db%, u$, p$);
            if new_id% > 0 then begin
                print "";
                let __d% = set_cookie("", u$);
                print "";
                SQLITE_CLOSE(db%);
                exit 0;
            else
                let err$ = "";
            end
        end
        SQLITE_CLOSE(db%);
    end

    let __d% = send_header_ok_html()
    let __d% = layout_start("")
?>
<?basil print READFILE$(""); ?>
<?basil
    if LEN(err$) > 0 then print ""error\"" + HTML$(err$) + "";
    let __d% = layout_end()
?>
